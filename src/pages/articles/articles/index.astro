---
import { getCollection } from 'astro:content';
import BaseLayout from '@layouts/Layout.astro';
import TerminalWindow from '@components/TerminalWindow.astro';
import CommandOutput from '@components/CommandOutput.astro';

const articles = await getCollection('articles');
articles.sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

// Group articles by category
const categorizedArticles = articles.reduce((acc, article) => {
  const category = article.data.category;
  if (!acc[category]) {
    acc[category] = [];
  }
  acc[category].push(article);
  return acc;
}, {} as Record<string, typeof articles>);
---

<BaseLayout title="Articles | x0 Terminal">
  <TerminalWindow command="ls articles" title="Articles">
    <CommandOutput>
      <h1 class="text-terminal-yellow text-2xl mb-4">Technical Articles</h1>

      {Object.entries(categorizedArticles).map(([category, categoryArticles]) => (
        <div class="mb-8">
          <h2 class="text-terminal-white text-xl border-b border-terminal-green border-opacity-30 pb-2 mb-4">
            {category}
          </h2>
          <div class="space-y-4">
            {categoryArticles.map((article) => (
              <div class="animate-fade-in">
                <h3 class="text-lg">
                  <a href={`/articles/${article.slug}`} class="text-terminal-yellow hover:underline">
                    {article.data.title}
                  </a>
                </h3>
                <div class="flex items-center text-terminal-gray text-sm mt-1">
                  <span>{article.data.date.toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                  })}</span>
                  <span class="mx-2">•</span>
                  <div class="flex flex-wrap gap-1">
                    {article.data.tags.map((tag: string) => (
                      <span class="inline-block bg-terminal-green bg-opacity-20 text-terminal-white text-xs px-2 py-1 rounded">
                        {tag}
                      </span>
                    ))}
                  </div>
                </div>
                <p class="mt-2 text-terminal-green">{article.data.description}</p>
                <div class="mt-2">
                  <a href={`/articles/${article.slug}`} class="text-terminal-yellow hover:underline text-sm">
                    Read article →
                  </a>
                </div>
              </div>
            ))}
          </div>
        </div>
      ))}

      {articles.length === 0 && (
        <div class="text-center py-8">
          <p class="text-terminal-gray">No articles found.</p>
        </div>
      )}
    </CommandOutput>
  </TerminalWindow>
</BaseLayout>
